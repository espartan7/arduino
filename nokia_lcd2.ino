/*********************************************************************
This is an example sketch for our Monochrome Nokia 5110 LCD Displays

  Pick one up today in the adafruit shop!
  ------> http://www.adafruit.com/products/338

These displays use SPI to communicate, 4 or 5 pins are required to
interface

Adafruit invests time and resources providing this open source code,
please support Adafruit and open-source hardware by purchasing
products from Adafruit!

Written by Limor Fried/Ladyada  for Adafruit Industries.
BSD license, check license.txt for more information
All text above, and the splash screen must be included in any redistribution
*********************************************************************/

/********************************************************************
Modified by Siew Wai Hung - February 2013
http://waihung.net
Display bitmap images on PCD8544 GLCD
Bitmap images are 80 x 45 in size
MSB to LSB Left to Right

Thanks to Adafruit's Library and 
Image2GLCD.exe by Jirawat Kongkaen http://avrportal.com
********************************************************************/

#include <Adafruit_GFX.h>
#include <Adafruit_PCD8544.h>

// Please use a level shifter (ex. 74HC4050) if you're using a 5V Arduino
// pin 7 - Serial clock out (SCLK)
// pin 6 - Serial data out (DIN)
// pin 5 - Data/Command select (D/C)
// pin 4 - LCD chip select (CS)
// pin 3 - LCD reset (RST)

Adafruit_PCD8544 display = Adafruit_PCD8544(7, 6, 5, 3, 4);

const unsigned char PROGMEM arduino[450] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 
0x00, 0xFF, 0x00, 0x3A, 0x00, 0x07, 0xFF, 0xF0, 0x00, 0x00, 0x0F, 0xFF, 0xF0, 0x1E, 0x00, 0x1F, 
0xFF, 0xFE, 0x00, 0x00, 0x3F, 0xFF, 0xFC, 0x1E, 0x00, 0x7F, 0xFF, 0xFF, 0x80, 0x00, 0xFF, 0xFF, 
0xFF, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xC0, 0x03, 0xFF, 0xFF, 0xFF, 0x80, 0x03, 0xFF, 0xFF, 0xFF, 
0xF0, 0x07, 0xFF, 0xFF, 0xFF, 0xC0, 0x07, 0xFF, 0x00, 0x7F, 0xF8, 0x0F, 0xFE, 0x00, 0xFF, 0xF0, 
0x0F, 0xFC, 0x00, 0x0F, 0xFC, 0x3F, 0xF8, 0x00, 0x1F, 0xF0, 0x0F, 0xF0, 0x00, 0x03, 0xFE, 0x3F, 
0xE0, 0x00, 0x0F, 0xF8, 0x1F, 0xE0, 0x00, 0x01, 0xFF, 0x7F, 0xC0, 0x00, 0x03, 0xFC, 0x3F, 0xC0, 
0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x01, 0xFC, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0xFE, 0x00, 0x38, 
0x00, 0xFE, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x38, 0x00, 0xFE, 0x3F, 0x00, 0x00, 0x00, 
0x1F, 0xF8, 0x00, 0x38, 0x00, 0xFE, 0x3F, 0x01, 0xFF, 0xE0, 0x0F, 0xF8, 0x03, 0xFF, 0x80, 0xFE, 
0x3F, 0x01, 0xFF, 0xE0, 0x0F, 0xF0, 0x03, 0xFF, 0x80, 0xFE, 0x3F, 0x01, 0xFF, 0xE0, 0x0F, 0xF8, 
0x03, 0xFF, 0x80, 0xFE, 0x3F, 0x00, 0x00, 0x00, 0x1F, 0xFC, 0x00, 0x38, 0x00, 0xFE, 0x3F, 0x80, 
0x00, 0x00, 0x3F, 0xFC, 0x00, 0x38, 0x00, 0xFE, 0x3F, 0xC0, 0x00, 0x00, 0x7F, 0xFF, 0x00, 0x38, 
0x01, 0xFC, 0x1F, 0xC0, 0x00, 0x00, 0xFF, 0xFF, 0x80, 0x00, 0x03, 0xFC, 0x1F, 0xE0, 0x00, 0x01, 
0xFF, 0x7F, 0xC0, 0x00, 0x03, 0xFC, 0x0F, 0xF8, 0x00, 0x07, 0xFE, 0x3F, 0xF0, 0x00, 0x0F, 0xF8, 
0x07, 0xFE, 0x00, 0x1F, 0xFC, 0x1F, 0xFC, 0x00, 0x3F, 0xF0, 0x03, 0xFF, 0xC1, 0xFF, 0xF0, 0x0F, 

0xFF, 0xC3, 0xFF, 0xE0, 0x01, 0xFF, 0xFF, 0xFF, 0xE0, 0x03, 0xFF, 0xFF, 0xFF, 0xC0, 0x00, 0xFF, 
0xFF, 0xFF, 0xC0, 0x01, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x3F, 0xFF, 0xFF, 0x00, 0x00, 0x7F, 0xFF, 
0xFE, 0x00, 0x00, 0x0F, 0xFF, 0xFC, 0x00, 0x00, 0x1F, 0xFF, 0xF8, 0x00, 0x00, 0x01, 0xFF, 0xE0, 
0x00, 0x00, 0x03, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xC1, 
0xF8, 0x3E, 0x0E, 0x39, 0xFE, 0x70, 0xC3, 0xE0, 0x03, 0xC1, 0xFE, 0x3F, 0x8E, 0x39, 0xFE, 0x78, 
0xC7, 0xF0, 0x03, 0xE1, 0xCF, 0x33, 0xCE, 0x38, 0x30, 0x7C, 0xCE, 0x38, 0x03, 0x61, 0xCF, 0x31, 
0xCE, 0x38, 0x30, 0x7C, 0xCE, 0x38, 0x07, 0x71, 0xCE, 0x30, 0xCE, 0x38, 0x30, 0x7E, 0xCE, 0x38, 
0x07, 0x71, 0xFE, 0x30, 0xCE, 0x38, 0x30, 0x77, 0xCE, 0x38, 0x0F, 0xF1, 0xDC, 0x31, 0xCE, 0x38, 
0x30, 0x73, 0xCE, 0x38, 0x0E, 0x39, 0xCE, 0x3F, 0xCF, 0xF9, 0xFE, 0x73, 0xCF, 0xF0, 0x0E, 0x39, 
0xCF, 0x3F, 0x87, 0xF1, 0xFE, 0x71, 0xC7, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
};

//This is awesome in bitmap form
const unsigned char PROGMEM awesome[] = {
0xff,0xff,0xff,0xff,0xff,0xff,
0xff,0xff,0xff,0xff,0xff,0xff,
0xff,0xff,0xff,0xff,0xff,0xff,
0xff,0xff,0xff,0xff,0xff,0xff,
0xff,0xff,0xff,0xff,0xff,0xff,
0xff,0xff,0xff,0xff,0xff,0xff,
0xff,0xff,0xff,0xff,0xff,0xff,
0xff,0xff,0xff,0xff,0xff,0xff,
0xff,0xf0,0xff,0xff,0xf,0xff,
0xff,0xe0,0x3f,0xfe,0x3,0xff,
0xff,0xc0,0x3f,0xfc,0x3,0xff,
0xff,0x80,0x1f,0xf8,0x1,0xff,
0xff,0x80,0x1f,0xf8,0x1,0xff,
0xff,0x80,0xf,0xf8,0x0,0xff,
0xff,0x0,0xf,0xf0,0x0,0xff,
0xff,0x2,0xf,0xf0,0x20,0xff,
0xff,0xf,0xf,0xf0,0xf0,0xff,
0xff,0x9f,0x8f,0xf9,0xf8,0xff,
0xff,0x9f,0xdf,0xf9,0xfd,0xff,
0xff,0xbf,0xdf,0xfb,0xfd,0xff,
0xff,0xff,0xff,0xff,0xff,0xff,
0xff,0xff,0xff,0xff,0xff,0xff,
0xff,0xff,0xff,0xff,0xff,0xff,
0xff,0xff,0xff,0xff,0xff,0xff,
0xf0,0x0,0x0,0x0,0x0,0xf,
0xee,0xfe,0xfd,0xfd,0xfe,0xf7,
0xde,0xfe,0xfd,0xfd,0xfe,0xfb,
0xbe,0xfe,0xfd,0xfd,0xfe,0xfd,
0xfe,0xfe,0xfd,0xfd,0xfe,0xff,
0x7e,0xfe,0xfd,0xfd,0xfe,0xfe,
0x7e,0xfe,0xfd,0xfd,0xfe,0xfe,
0x0,0x0,0x0,0x0,0x0,0x0,
0x7e,0xfe,0xfd,0xf9,0xfe,0xfe,
0x7e,0xfe,0xfd,0xfd,0xfe,0xfe,
0x7e,0xfe,0xfd,0xfd,0xfe,0xfe,
0xfe,0xfe,0xfd,0xfd,0xfe,0xff,
0xbe,0xfe,0xfd,0xfd,0xfe,0xfd,
0xde,0xfe,0xfd,0xfd,0xfe,0xfb,
0xee,0xfe,0xfd,0xfd,0xfe,0xf7,
0xf0,0x0,0x0,0x0,0x0,0xf,
0xff,0xff,0xff,0xff,0xff,0xff,
0xff,0xff,0xff,0xff,0xff,0xff,
0xff,0xff,0xff,0xff,0xff,0xff,
0xff,0xff,0xff,0xff,0xff,0xff,
0xff,0xff,0xff,0xff,0xff,0xff,
0xff,0xff,0xff,0xff,0xff,0xff,
0xff,0xff,0xff,0xff,0xff,0xff,
0xff,0xff,0xff,0xff,0xff,0xff
};

const unsigned char PROGMEM juss [] = {
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xfc,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xfb,0x3f,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xf8,0xf7,0xbf,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xf3,0x77,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xf7,0xb7,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xbf,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xf7,0xdf,0xbf,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xf7,0xdf,0xbe,0x3f,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xfb,0xef,0xb3,0xdf,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xfd,0xe7,0x67,0xdf,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xfe,0xf7,0x5f,0xdf,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0x77,0x3f,0xdf,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xc0,0x1e,0x7f,0xbf,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0x7f,0xde,0xfe,0x7f,0xff,0xff,0xff,0xff,0xf0,
0xff,0xfe,0xff,0xff,0xf1,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xfe,0xff,0xff,0xf,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xfe,0xff,0x9f,0x1,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0x38,0x3e,0xfe,0x7f,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xc2,0x76,0xff,0x7f,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xf4,0xf6,0x7f,0xbf,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xe9,0xf7,0x1f,0xbf,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xd1,0xf7,0x67,0x7f,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xdb,0xe7,0xb8,0x7f,0xff,0xff,0xff,0xff,0xf0,
0xf3,0xff,0xab,0xe7,0xbf,0xff,0xff,0xff,0xff,0xff,0xf0,
0xf5,0xff,0x5b,0xd7,0xbf,0xff,0xff,0xff,0xff,0xff,0xf0,
0xf6,0x7f,0xbb,0xd7,0xbf,0xff,0xff,0xff,0xf3,0xc3,0xf0,
0xf7,0x3e,0xbc,0x3b,0x67,0xff,0xff,0xff,0xf3,0x83,0xf0,
0xf7,0xbd,0x7f,0xfd,0xe7,0xff,0xff,0xff,0xff,0x9f,0xf0,
0xfb,0xdd,0xff,0xff,0xe7,0xff,0xff,0xff,0xff,0x9f,0xf0,
0xfb,0xea,0x8f,0x1f,0xe7,0x9e,0x70,0x70,0x72,0x3,0xf0,
0xfd,0xe8,0x7f,0xe7,0xe7,0x9e,0x60,0x20,0x32,0x3,0xf0,
0xfe,0xe5,0xff,0x9f,0xe7,0x9e,0x67,0xa7,0xb3,0x9f,0xf0,
0xff,0x75,0xfc,0x7f,0xe7,0x9e,0x63,0xe3,0xf3,0x9f,0xf0,
0xff,0xbb,0x7,0xff,0xe7,0x9e,0x70,0x70,0x73,0x9f,0xf0,
0xff,0xcb,0xff,0xff,0xe7,0x9e,0x7c,0x3c,0x33,0x9f,0xf0,
0xff,0xeb,0xff,0xff,0xe7,0x9e,0x7f,0x3f,0x33,0x9f,0xf0,
0xff,0xe7,0xff,0xff,0xe7,0x8c,0x6f,0x2f,0x33,0x9f,0xf0,
0xff,0xd7,0xff,0xff,0xe7,0xc0,0x60,0x20,0x33,0x9f,0xf0,
0xff,0xd7,0xff,0xff,0xe7,0xc2,0x70,0xf0,0xf3,0x9f,0xf0,
0xff,0xdf,0xff,0xff,0xe7,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xdf,0xff,0xff,0xc7,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xef,0xff,0xff,0xf,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xef,0xff,0xff,0x1f,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xef,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0x8f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0
};


int intensidad = 0;
int led = 9;
int subir = 1;
int bajar = 0;

void setup()   {
  Serial.begin(9600);
  display.begin();
  analogWrite(led,200);
  display.setContrast(50);
  //display.display();
    display.clearDisplay();
    
  
  analogWrite(led,200);
  
//  delay(900);
  for(int j=200; j>=0; j--){
    analogWrite(led,j);
    delay(5);
  }
    display.clearDisplay();   // clears the screen and buffer
   
  analogWrite(led,200);
   display.clearDisplay();
  
}


void loop() {
  display.clearDisplay();
  display.drawBitmap(0, 0, juss, 84, 45, BLACK);
  
  display.display();
  delay(3000);
  display.clearDisplay();
    
  display.drawBitmap(20, 0, awesome, 48, 48, BLACK);
  
  display.display();
  delay(3000);
  display.clearDisplay();
  //grabarLCD();
  //int r=random(10,50);
  //record("Grabando\naudio y video\n", r);
}

void grabarLCD(){
  if(subir == 1){
    if(intensidad >= 220){
      subir = 0;
      bajar = 1;
    }
    analogWrite(led, intensidad);
    intensidad+=10;
  }
  
  if(bajar == 1){
    if(intensidad <= 0){
      subir = 1;
      bajar = 0;
    }
    if(intensidad>=10){
      intensidad-=10;
    }
    analogWrite(led, intensidad);
      
    
  } 


}

void record(String a, int r){
  display.clearDisplay();
  display.setTextSize(1);
  //display.setTextColor(WHITE,BLACK);
  display.setCursor(0,0);

  int i=0;
  String msg = String("[");
  msg += (r*2);
  msg += "%]\n";
  msg += a;
  String points = String(".");
  
  for(i=1; i<=(r/4); i++){
        msg += points;
  }
  msg += "\n[Almacenado]";
  
  display.println(msg);
  display.display();
  delay(200);
}

void imprimirTexto(String a){
  display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0,0);
  
  display.println(a);
  display.display();
  delay(1000);
}
